<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ taglib prefix="spring" uri="http://www.springframework.org/tags"%>


<section id="detail_contents">
	<div class="carSearchBox mgb20">

		<label for="orgId"><span class="carSearchtitle">회사선택</span></label>
		<select class="select_b mgr20" id="orgId" name="orgId" title="회사선택" onchange="fnObj.doSearch();">
		<!-- 	<option value="">전체</option> -->
			<c:forEach items="${accessOrgIdList }" var="data">
				<option value="${data.orgId }" targetAuth = "${data.orgAccessAuthType }"
					<c:if test = "${data.orgId eq baseUserLoginInfo.applyOrgId}">selected="selected"</c:if>
				>${data.cpnNm }</option>
			</c:forEach>
		</select>

		<label for="yearArea"><span class="carSearchtitle">년도</span></label><span id="yearArea"></span>
		<label for="monthArea"><span class="carSearchtitle mgl10">월</span></label><span id="monthArea"></span>
		<button type="button" class="btn_g_black mgl10" onclick="fnObj.doSearch();">검색</button>
	</div>

	<!-- <div id="AXGridCalendar"></div> -->

	<div class="spending_st_box">

		<span class="scroll_cover"  onclick="javascript:setdayFull('sp_scroll_body');"></span>
		<!-- header -->
		<div class="sp_scroll_header">
			<table class="spending_tb_basic" summary="">
				<colgroup>
	                <col width="5%" /> 	<!--체크박스-->
	                <col width="5%"/> 	<!--no -->
	                <col width="10%"/> 	<!--달력년도 -->
	                <col width="8%" /> 	<!--주차 -->
	                <col width="8%" /> 	<!--월 -->
	                <col width="10%"/> 	<!--시작일 -->
	                <col width="10%"/>	<!--종료일 -->
	                <col width="10%"/>	<!--오픈여부 -->
	                <col width="8%" /> 	<!--회계년도 -->

	            </colgroup>
	          	<thead>
	                <tr id="tblHeaderPart" height="39px;">
	                    <th rowspan="2" scope="col"><input type="checkbox" name="chkAll" onclick="fnObj.checkAll();"/></th>
	                    <th rowspan="2" scope="col">NO</th>
	                    <th rowspan="2" scope="col">달력년도</th>
	                    <th rowspan="2" scope="col">주차</th>
	                    <th rowspan="2" scope="col">월</th>
	                    <th rowspan="2" scope="col">시작일</th>
	                    <th rowspan="2" scope="col">종료일</th>
	                    <th rowspan="2" scope="col">오픈여부</th>
	                    <th rowspan="2" scope="col">회계연도</th>
	                </tr>
	            </thead>
			</table>
		</div>

		<!-- body -->
		<div class="sp_scroll_body">
			<table id="SGridTarget" class="spending_tb_basic" summary="">
				<colgroup>
					<col width="5%" /> 	<!--체크박스-->
	                <col width="5%"/> 	<!--no -->
	                <col width="10%"/> 	<!--달력년도 -->
	                <col width="8%" /> 	<!--주차 -->
	                <col width="8%" /> 	<!--월 -->
	                <col width="10%"/> 	<!--시작일 -->
	                <col width="10%"/>	<!--종료일 -->
	                <col width="10%"/>	<!--오픈여부 -->
	                <col width="8%" /> 	<!--회계년도 -->
				</colgroup>
				<tbody></tbody>
			</table>
		</div>
	</div>

	<div class="btnZoneBox" id="btnArea">
		<a href="#;" class="p_withelin_btn btn_auth" id="waitBtn" onclick="fnObj.calendarOpen('W');">대기</a>
		<a href="#;" class="p_withelin_btn btn_auth" id="openBtn" onclick="fnObj.calendarOpen('O');">오픈</a>
		<a href="#;" class="p_blueblack_btn btn_auth" id="closeBtn" onclick="fnObj.calendarOpen('C');">마감</a>
	</div>

</section>



<script type="text/javascript">

function setdayFull(knd){
	var h = '';
	if(knd == 'week_allday')
		h = '99px';
	else
		h = '450px';

	if($('.'+knd).css('max-height') == h)
		$('.'+knd).css('max-height','none');
	else
		$('.'+knd).css('max-height', h);
}


//Global variables :S ---------------
//사용자언어
var lang = '${baseUserLoginInfo.lang}';		//language (profile language... 'KOR' or 'ENG')

//공통코드
var comCodeYear;				//부서분류
var comCodeMonth;				//부서분류

var codeYn;
var orgCodeCombo;

var calendarMode;

var myGrid = new SGrid();		// instance		new sjs

var myModal = new AXModal();	// instance
//Global variables :E ---------------
var curYear;


/*
 * 화면세팅에 관한함수(pageStart)와, 각종 함수들을 정의하는 fnObj(function object).
 */
var fnObj = {

	//################# init function :S #################

	//선로딩코드
	preloadCode: function(){


		fnObj.getYearList(); //해당 관계사의 저장된 가장 마지막 달력 년도를 기준으로 년도 셀렉트 생성

		comCodeMonth = fnObj.getMonthCombo();
		curYear = (new Date()).getFullYear();


		var params = {'authOrgId':'Y', 'userId':'${baseUserLoginInfo.userId}'};		//나에게 권한이 있는 관계사만 볼 수 있다
		orgCodeCombo = getCodeInfo(lang, 'optionValue', 'optionText', null, null, null, '/common/getOrgCodeCombo.do', params);	//ORG코드(콤보용) 호출

		codeYn = getBaseCommonCode('CALENDAR_OPEN_TYPE', '', 'CD', 'NM', null, '', '',{ orgId : $("#orgId").val()});

		var monthSelectTag = createSelectTag('month', comCodeMonth, 'optionValue', 'optionText', '', 'fnObj.doSearch(); ', {}, null, 'select_b w_date');	//select tag creator 함수 호출 (common.js)
		$("#monthArea").html(monthSelectTag);

		//-- 달력 오픈 마감 권한 세팅
		var orgChk =  true;
		if('${baseUserLoginInfo.orgId }' != '${baseUserLoginInfo.applyOrgId }'){	//org가 다를땐 무조건 안되고.
			$("#btnArea").hide();
			orgChk =  false;
		}

		//-- 내 관계사면,
		if(orgChk){
			if('${baseUserLoginInfo.openCalendar }' != 'Y'){						//open 을 못한다
				$("#openBtn").hide();
			}
			if('${baseUserLoginInfo.closeCalendar }' != 'Y'){						//close 을 못한다
				$("#closeBtn").hide();
				$("#waitBtn").hide();
			}
		}


	},


	//화면세팅
    pageStart: function(){


       	/* 그리드 설정정보 */
       	var configObj = {

       		targetID : "SGridTarget",		//그리드의 id

       		//그리드 컬럼 정보

            colGroup : [

                {key:"",  formatter:function(obj){
                	return ('<input type="checkbox" name="chkRow" value="'+obj.item.weekCalId+'" />');
                }},

                {key:"NO", 	formatter:function(obj){
                	if(obj.item.endDate >= new Date().yyyy_mm_dd() && obj.item.startDate <= new Date().yyyy_mm_dd()) return "<font id=thisDay color=#F78181><b>이번주</b></font>";		//오늘 날짜 구별
                	else return ("<span class='fontGray\'>" + (obj.index + 1) + "</span>");
                }},

                {key:"calYear"},
                {key:"week"},
                {key:"month"},
                {key:"startDate"},
                {key:"endDate"},
                {key:"open", formatter: function(obj){
        						var typeObj = {'C':'<font style="text-decoration:line-through;color:#b3aeae;">CLOSE</font>','W':'<font style="color:#b3aeae;">WAIT</font>', 'O':'<strong>OPEN</strong>'};
        						//var colorObj = {'C':'#ededed','W':'#ededed', 'O':'#FFFFFF'};
			        			//var str = createSelectTag('holiday'+(obj.index), codeYn, 'CD', 'NM', obj.item.open, 'fnObj.doChangeIt(this,"' +  obj.item.calYear + '","' +  obj.item.week + '","open")', colorObj, null, 'change_direct select_b displayN');

        						return typeObj[obj.item.open];
                }},
                {key:"fiscalYear"},
                {key:"bgcolor", 	formatter:function(obj){
                	if(obj.item.endDate >= new Date().yyyy_mm_dd() && obj.item.startDate <= new Date().yyyy_mm_dd()) return "#ffe8e8";		//이번주 색구별
                	else if(obj.item.endDate < new Date().yyyy_mm_dd()) return '#f7f7f7';													//과거주 색구별
                }}
            ],
            body : {
                onclick: function(){
                }
            }
		};
    	/* 그리드 한건 데이터 HTML 포맷 (** 1.tbody 내에 들어갈 tr 태그,  2.#[n] 의 위치에 colGroup 의 순서대로 데이터 세팅) */
    	var rowHtmlStr = '<tr bgcolor="#[9]">';
    	rowHtmlStr +=	 '<td>#[0]</td>';					//체크박스
    	rowHtmlStr +=	 '<td>#[1]</td>';					//번호
    	rowHtmlStr +=	 '<td>#[2]</td>';					//년도
    	rowHtmlStr +=	 '<td>#[3]</td>';					//주차
    	rowHtmlStr +=	 '<td>#[4]</td>';					//월
    	rowHtmlStr +=	 '<td>#[5]</td>';					//시작일
    	rowHtmlStr +=	 '<td>#[6]</td>';					//종료일
    	rowHtmlStr +=	 '<td>#[7]</td>';					//오픈여부
    	rowHtmlStr +=	 '<td>#[8]</td>';					//회계년도
    	rowHtmlStr +=	 '</tr>';
    	configObj.rowHtmlStr = rowHtmlStr;

    	myGrid.setConfig(configObj);		//그리드 설정정보 세팅
    	//-------------------------- 그리드 :E -------------------------



    	//-------------------------- 모달창 :S -------------------------
    	myModal.setConfig({
    		windowID:"myModalCT",
    		//openModalID:"kkkkk",
    		width:740,
            mediaQuery: {
                mx:{min:0, max:1200}, dx:{min:767}
            },
    		displayLoading:true,
            scrollLock: true,
    		onclose: function(){
    		}
            ,contentDivClass: "popup_outline"
    	});
    	//-------------------------- 모달창 :E -------------------------

    },//end pageStart.



  	//검색
    doSearch: function(){		//knd : null - 검색버튼, 숫자 - 페이지검색

    	var url = contextRoot + "/system/getCalendarWeekList.do";

    	var param ={
    				orgId 	: $("#orgId").val(),
    				calYear : $("#calYear").val(),
    				month 	: $("#month").val(),
    	};

    	var callback = function(result){

    		var obj = JSON.parse(result);
    		var cnt = obj.resultVal;	//결과수
    		var list = obj.resultList;	//결과데이터JSON

    		myGrid.setGridData({	//그리드 데이터 세팅	*** 2 ***
				list: list			//그리드 테이터
			});


    		moveGridToday();		//스크롤 위치 이동

    		var auth = $("#orgId option:selected").attr("targetAuth");

			if(auth == "READ"){
				$(".btn_auth").hide();
			}else{
				$(".btn_auth").show();
			}


    	};

    	commonAjax("POST", url, param, callback, false);
    },//end doSearch


    //현재 DB 에 입력된 값중에 가장 마지막 년도
    getYearList : function(){

    	maxYear =0;

    	var url = contextRoot + "/system/getCalendarMaxYear.do";
    	var param ={
				orgId 	: $("#orgId").val(),
		};

    	var callback = function(result){
    		var obj = JSON.parse(result);

    		maxYear = obj.resultObject;

    		var yearArray = new Array();
        	if(maxYear != 0){
	        	for(var i = 2016; i <= maxYear; i++ ){
	        		var yearInfo = new Object();

	        		yearInfo.optionValue = i;
	        		yearInfo.optionText = i + "년";

	        		yearArray.push(yearInfo);
	        	}
        	}else{
        		var yearInfo = new Object();

        		yearInfo.optionValue = '0';
        		yearInfo.optionText = "달력정보없음";

        		yearArray.push(yearInfo);
        	}

        	var today = new Date();
    		var curYear = today.getFullYear();
        	var yearSelectTag = createSelectTag('calYear', yearArray, 'optionValue', 'optionText', curYear, 'fnObj.doSearch(); ', {}, null, 'select_b w_date');	//select tag creator 함수 호출 (common.js)
    		$("#yearArea").html(yearSelectTag);
       }

    	commonAjax("POST", url, param, callback, false);

    },

  	//콤보박스 이벤트 함수
    doChangeIt: function(obj, calYear, week, colNm){

    	var url = contextRoot + "/system/doUpdateCalendarWeek.do";
    	var param = {
  				calYear : calYear		// 날짜
    			,week	: week
    			,orgId : $("#orgId").val()
    	}

    	param[colNm] = obj.value;		//바꾸려는 컬럼명과 값 으로 (key/value) 전달

    	var callback = function(result){

    		var obj = JSON.parse(result);
    		var cnt = obj.resultVal;	//결과수

    	    if(obj.result == "SUCCESS"){

    	    	toast.push("저장하였습니다!");

    			fnObj.doSearch();	//재검색

    		}

    	};

    	commonAjax("POST", url, param, callback);
    },

    //배열에 새로운 인자로 추가 (공통코드 이상문제해결)
    addComCodeArray: function(obj){
		for(var i=0; i<obj.length; i++){
			obj[i].optionValue = obj[i].CD;		//'optionValue' 프로퍼티를 생성하며 값으로 CD 의 값 할당
			obj[i].optionText  = obj[i].NM;		//'optionText'  프로퍼티를 생성하며 값으로 NM 의 값 할당
		}
    },

    getMonthCombo : function (){
    	var monthArray = new Array();

    	var info = new Object();
    	info.optionValue = "ALL";
    	info.optionText = "전체";

    	monthArray.push(info);

    	for(var idx = 1; idx <= 12; idx ++ ){
    		var monthInfo = new Object();

    		monthInfo.optionValue = idx;
    		monthInfo.optionText = idx + "월";

    		monthArray.push(monthInfo);
    	}

    	return  monthArray;
    },


  	//그리드 사이즈 full (height all view)
    fullGridSize: function(type){		//type 'open' 'close'
   		if(type == 'open'){
   			myGrid.setHeight(myGridCalendar.getList().length * 36 + 100);
   		}else{
   			myGrid.setHeight(600);
   		}
    },

    //전체선택
  	checkAll : function(){

  		if($("input:checkbox[name=chkAll]").is(":checked")){
  			$("input:checkbox[name=chkRow]").prop("checked",true);
  		}else{
  			$("input:checkbox[name=chkRow]").prop("checked",false);
  		}

  	},

    //달력 선택 오픈 기능
  	calendarOpen : function(type){
  		var openFlag = type;
  		var idArr = [];


  		$('input:checkbox[name="chkRow"]').each(function() {
  			 if(this.checked){
  				idArr.push(this.value);
  			 }
  		});

  		if(idArr.length == 0){
  			alert("달력을 선택해주세요.");
  			return false;
  		}

  		var url = contextRoot + "/system/doUpdateCalendarWeek.do";
    	var param = {
  				 open 	: openFlag,
  				 idArr 	: idArr.join(",")
    	}

    	var callback = function(result){

    		var obj = JSON.parse(result);
    		var cnt = obj.resultVal;	//결과수

    	    if(obj.result == "SUCCESS"){

    	    	toast.push("저장하였습니다!");
    			fnObj.doSearch();	//재검색
    			$("input:checkbox[name=chkAll]").prop("checked",false);
    		}

    	};

    	commonAjax("POST", url, param, callback);


  	}
  	//################# else function :E #################



};//end fnObj.


/*
 * 화면로딩완료후, 자바스크립트 화면세팅 과 그외동작들 호출.
 */
$(function(){
	fnObj.preloadCode();	//공통코드 or 각종선로딩코드
	fnObj.pageStart();		//화면세팅
	fnObj.doSearch();

	//검색버튼 동작
	$(".searchButtonItem").on("click", function(){
		fnObj.doSearch();
	});

});


//이번주로 위치이동
function moveGridToday(){
	if($("#thisDay").length>0){
	    var posi = $("#thisDay").position();
	    $('.sp_scroll_body').animate({scrollTop : posi.top - 70}, 400);
	}
}

</script>