/**
 *
 */
/**
 *
 * @author  : ChanWoo Lee
 * @since   : 2015. 2. 5.
 * @filename : package-info.java
 * @version : 1.0.0
 * @see
 *
 * <pre>
 * package  : ib.reply.web
 * </pre>
 */
package ib.reply.web;

import ib.cmm.IBsMessageSource;
import ib.cmm.service.CmmUseService;
import ib.login.service.StaffVO;
import ib.reply.service.ReplyService;
import ib.reply.service.ReplyVO;
import ib.work.service.WorkService;

import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpSession;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;

@Controller
public class ReplyController {

	/** CmmUseService */
	@Resource(name = "CmmUseService")
	private CmmUseService cmm;

	/** MessageSource */
	@Resource(name = "IBsMessageSource")
	IBsMessageSource messageSource;

	@Resource(name = "workService")
	private WorkService workService;

	@Resource(name = "replyService")
	private ReplyService replyService;

	/** log */
  protected static final Log LOG = LogFactory.getLog(ReplyController.class);

	/**
	 * 딜 화면 팝업에서 매각관련 내용 팝업
	 * @MethodName : PopUpReplyDisposal
	 * @param rcmdVO
	 * @param session
	 * @param model
	 * @return
	 * @throws Exception
	 * @author : user
	 * @since : 2015. 2. 5.
	 */
	@RequestMapping(value="/reply/PopUpReplyDisposal.do")
	public String popUpReplyDisposal( ReplyVO vo,
			HttpSession session,
			ModelMap model) throws Exception{
		if(session.getAttribute("baseUserLoginInfo")==null) return "basic/Content";
		Map baseUserLoginInfo = (Map)session.getAttribute("baseUserLoginInfo");
//		if(Integer.parseInt(loginUser.getPermission())<11) return "basic/Content";
		LOG.info(baseUserLoginInfo.get("loginId").toString());
		String rtn = "ajaxPopDiv/replyDisposal";
		try{

			StaffVO staffVO = new StaffVO();
			model.addAttribute("userList", cmm.userList(staffVO));
			model.addAttribute("offerSNB", vo.getsNb());
			model.addAttribute("supportList", workService.selectSupporterList(vo));
			if("stats".equals(vo.getTmpNum2())) {
				model.addAttribute("disposalList", workService.selectDisposalList4stats(vo));
				rtn = "ajaxPopDiv/statsDisposal";
				model.addAttribute("close", "stats");
				model.addAttribute("mainNm", vo.getTmpNum1());

			}else{
				model.addAttribute("disposalList", workService.selectDisposalList(vo));

			}
		}catch (Exception e){
			LOG.error(e);
			e.printStackTrace();
		}
		return rtn;
	}
	/**
	 * 매각 모달 페이지 저장
	 * @MethodName : saveDisposal
	 * @param vo
	 * @param session
	 * @param model
	 * @return
	 * @throws Exception
	 * @author : user
	 * @since : 2015. 2. 23.
	 */
	@RequestMapping(value="/reply/saveDisposal.do")
	public String saveDisposal( ReplyVO vo,
			HttpSession session,
			ModelMap model) throws Exception{
		if(session.getAttribute("baseUserLoginInfo")==null) return "basic/Content";
		Map baseUserLoginInfo = (Map)session.getAttribute("baseUserLoginInfo");
		LOG.info(baseUserLoginInfo.get("loginId").toString());
		try{
			replyService.saveDisposalByIbSystem(vo,baseUserLoginInfo);

			model.addAttribute("result", 1);

		}catch(Exception e){
			model.addAttribute("result", -1);
			LOG.error(e);
			e.printStackTrace();
		}

		return "basic/result";
	}
	/**
	 * 딜 팝업 페이지 매각 삭제
	 * @MethodName : deleteDisposal
	 * @param vo
	 * @param session
	 * @param model
	 * @return
	 * @throws Exception
	 * @author : user
	 * @since : 2015. 2. 24.
	 */
	@RequestMapping(value="/reply/deleteDisposal.do")
	public String deleteDisposal( ReplyVO vo,
			HttpSession session,
			ModelMap model) throws Exception{
		if(session.getAttribute("baseUserLoginInfo")==null) return "basic/Content";
		Map baseUserLoginInfo = (Map)session.getAttribute("baseUserLoginInfo");
		LOG.info(baseUserLoginInfo.get("loginId").toString());
		try{
			for(int i=0
					,leng=vo.getArrSnb().length; i<leng; i++){
				vo.setsNb(vo.getArrSnb()[i]);
				workService.deleteDisposal(vo);
			}
			model.addAttribute("result", 1);
		}catch(Exception e){
			model.addAttribute("result", -1);
			LOG.error(e);
			e.printStackTrace();
		}

		return "basic/result";
	}
	/**
	 * 딜 팝업 페이지 서포터 삭제
	 * @MethodName : deleteSupporter
	 * @param vo
	 * @param session
	 * @param model
	 * @return
	 * @throws Exception
	 * @author : user
	 * @since : 2015. 2. 24.
	 */
	@RequestMapping(value="/reply/deleteSupporter.do")
	public String deleteSupporter( ReplyVO vo,
			HttpSession session,
			ModelMap model) throws Exception{
		if(session.getAttribute("baseUserLoginInfo")==null) return "basic/Content";
		Map baseUserLoginInfo = (Map)session.getAttribute("baseUserLoginInfo");
		LOG.info(baseUserLoginInfo.get("loginId").toString());
		try{
			for(int i=0
					,leng=vo.getArrSnb().length; i<leng; i++){
				vo.setsNb(vo.getArrSnb()[i]);
				workService.deleteSupporter(vo);
			}
			model.addAttribute("result", 1);
		}catch(Exception e){
			model.addAttribute("result", -1);
			LOG.error(e);
			e.printStackTrace();
		}

		return "basic/result";
	}
}