package ib.system.web;

import ib.cmm.util.sim.service.AjaxResponse;
import ib.system.service.RoleRegService;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;


/**
 * <pre>
 * package	: ibiss.system.web
 * filename	: RoleRegController.java
 * </pre>
 *
 *
 *
 * @author	: oys
 * @date	: 2015. 7. 28.
 * @version :
 *
 */
@Controller
public class RoleRegController {

	@Resource(name = "roleRegService")
	private RoleRegService roleRegService;


	protected static final Log logger = LogFactory.getLog(RoleRegController.class);



	/**
	 * 권한코드 리스트
	 *
	 * @param		:
	 * @return		:
	 * @exception	:
	 * @author		: oys
	 * @date		: 2015. 7. 22.
	 */
	@RequestMapping(value = "/system/getRoleCodeCombo.do")
	public void getRoleCodeCombo(HttpServletRequest request,
			HttpServletResponse response,
			HttpSession session, ModelMap model,
			@RequestParam Map<String,String> map) throws Exception {


		List<Map> list = roleRegService.getRoleCodeCombo(map);

		AjaxResponse.responseAjaxSelect(response, list);	//결과전송
	}

		
	/**
	 * 관계사별 권한코드 리스트 (관계사별 권한코드 콤보박스 용)
	 *
	 * @param		: 
	 * @return		: 
	 * @exception	: 
	 * @author		: oys
	 * @date		: 2016. 11. 11.
	 */
	@RequestMapping(value = "/system/getRoleCodeByOrgCombo.do")
	public void getRoleCodeByOrgCombo(HttpServletRequest request,
			HttpServletResponse response,
			HttpSession session, ModelMap model,
			@RequestParam Map<String,String> map) throws Exception {

		Map loginInfo = (Map)session.getAttribute("baseUserLoginInfo");
		map.put("userId", loginInfo.get("userId").toString());

		List<Map> list = roleRegService.getRoleCodeByOrgCombo(map);

		AjaxResponse.responseAjaxSelect(response, list);	//결과전송
	}


	/**
	 * 권한관리 페이지
	 *
	 * @param		:
	 * @return		:
	 * @exception	:
	 * @author		: oys
	 * @date		: 2015. 7. 20.
	 */
	@RequestMapping(value = "/system/roleMgmt.do")
	public String roleMgmt(HttpServletRequest request,
			HttpSession session, HttpServletResponse response, ModelMap model) throws Exception {


		//메뉴 권한체크
		if(session.getAttribute("menuFilterStr").toString().indexOf("system/roleMgmt") == -1){
			return "redirect:/";
		}


		return "system/roleMgmt";
	}


	/**
	 * 권한코드 리스트
	 *
	 * @param		:
	 * @return		:
	 * @exception	:
	 * @author		: oys
	 * @date		: 2015. 7. 22.
	 */
	@RequestMapping(value = "/system/getRoleCodeList.do")
	public void getRoleCodeList(HttpServletRequest request,
			HttpServletResponse response,
			HttpSession session, ModelMap model,
			@RequestParam Map<String,String> map) throws Exception {



		List<Map> list = roleRegService.getRoleCodeList(map);

		AjaxResponse.responseAjaxSelect(response, list);	//결과전송
	}


	/**
	 * 권한등록
	 *
	 * @param		:
	 * @return		:
	 * @exception	:
	 * @author		: oys
	 * @date		: 2015. 7. 20.
	 */
	@RequestMapping(value = "/system/addRole.do")
	public String addRole(HttpServletRequest request,
			HttpServletResponse response, ModelMap model,
			HttpSession session, @RequestParam Map<String,Object> map) throws Exception {



		model.addAllAttributes(map);	//받은 파라미터 화면으로 그대로 전달.

		return "system/addRole/pop";
	}


	/**
	 * 권한 저장 ajax
	 *
	 * @param		:
	 * @return		:
	 * @exception	:
	 * @author		: oys
	 * @date		: 2015. 7. 20.
	 */
	@RequestMapping(value = "/system/doSaveRole.do")
	public void doSaveModule(HttpServletRequest request,
			HttpServletResponse response, ModelMap model,
			HttpSession session, @RequestParam Map<String,Object> map) throws Exception {


		Map loginUser = (Map)session.getAttribute("baseUserLoginInfo");

		map.put("userSeq", loginUser.get("userId").toString());		//user_id(sequence)


		String mode = map.get("mode").toString();	//'new' or 'update'

		int upCnt = 0;
		if("update".equals(mode)){
			upCnt = roleRegService.updateRole(map);
		}else{	//"new"
			upCnt = roleRegService.insertRole(map);	//upCnt : 실제 넘어오는 값은 메뉴아이디(menuId) 이다
		}


		AjaxResponse.responseAjaxSave(response, upCnt);	//결과전송
	}


	/**
	 * 권한삭제 (enable N)
	 *
	 * @param		:
	 * @return		:
	 * @exception	:
	 * @author		: oys
	 * @date		: 2015. 7. 21.
	 */
	@RequestMapping(value = "/system/deleteRole.do")
	public void deleteModule(HttpServletRequest request,
			HttpServletResponse response, ModelMap model,
			HttpSession session, @RequestParam Map<String,Object> map) throws Exception {


		Map loginUser = (Map)session.getAttribute("baseUserLoginInfo");

		map.put("userSeq", loginUser.get("userId").toString());		//user_id(sequence)


		int upCnt = 0;
		upCnt = roleRegService.deleteRole(map);

		AjaxResponse.responseAjaxSave(response, upCnt);	//결과전송

	}


}