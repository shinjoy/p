package ib.stats.service.impl;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.stereotype.Service;

import egovframework.rte.fdl.cmmn.AbstractServiceImpl;
import ib.stats.service.StatsService;
import ib.stats.service.StatsVO;
import ib.work.service.WorkVO;

@Service("statsService")
public class StatsServiceImpl extends AbstractServiceImpl implements StatsService {

	 protected static final Log logger = LogFactory.getLog(StatsServiceImpl.class);

	 @Resource(name = "statsDAO")
	 private StatsDAO statsDAO;

	 /**
	 *
	 * @MethodName : selectPrivateResult
	 * @param VO
	 * @return
	 * @throws Exception
	 */
	@SuppressWarnings("unchecked")
	public List<StatsVO> selectPrivateResult(StatsVO VO) throws Exception {
		return statsDAO.selectPrivateResult(VO);
	}

	/**
	 *
	 * @MethodName : selectPrivateOffer
	 * @param workVO
	 * @return
	 */
	@SuppressWarnings("unchecked")
	public List<WorkVO> selectPrivateOffer(WorkVO VO) throws Exception {
		return statsDAO.selectPrivateOffer(VO);
	}

	/**
	 *
	 * @MethodName : selectPrivateOfferKeyPoint
	 * @param workVO
	 * @return
	 */
	@SuppressWarnings("unchecked")
	public List<WorkVO> selectPrivateOfferKeyPoint(WorkVO workVO) throws Exception {
		return statsDAO.selectPrivateOfferKeyPoint(workVO);
	}
	/**
	 *
	 * @MethodName : selectRecommendOpinion
	 * @param workVO
	 * @return
	 */
	@SuppressWarnings("unchecked")
	public List<WorkVO> selectRecommendOpinion(WorkVO VO) throws Exception {
		return statsDAO.selectRecommendOpinion(VO);
	}

	/**
	 *
	 * @MethodName : selectNetwork
	 * @param workVO
	 * @return
	 */
	@SuppressWarnings("unchecked")
	public List<WorkVO> selectNetwork(WorkVO VO) throws Exception {
		return statsDAO.selectNetwork(VO);
	}

	/**
	 *
	 * @MethodName : selectIntroducer
	 * @param workVO
	 * @return
	 */
	@SuppressWarnings("unchecked")
	public List<WorkVO> selectIntroducer(WorkVO VO) throws Exception {
		return statsDAO.selectIntroducer(VO);
	}

	/**
	 *
	 * @MethodName : selectPrivateOffer4Stats
	 * @param workVO
	 * @return
	 */
	@SuppressWarnings("unchecked")
	public List<WorkVO> selectPrivateOffer4Stats(StatsVO VO) throws Exception {
		return statsDAO.selectPrivateOffer4Stats(VO);
	}

	/**
	 *
	 * @MethodName : selectOfferInfo
	 * @param workVO
	 * @return
	 */
	public Object selectOfferInfo(StatsVO VO) throws Exception {
		return statsDAO.selectOfferInfo(VO);
	}

	/********** 통계 정보 **********/
	/**
	 *
	 * @MethodName : selectDealCount
	 * @param workVO
	 * @return
	 */
	public List<Map> selectDealCount(Map<String, String> map) throws Exception {
		return statsDAO.selectDealCount(map);
	}


	/**
	 *
	 * @MethodName : selectInvestAmount
	 * @param workVO
	 * @return
	 */
	public List<Map> selectInvestAmount(Map<String, String> map) throws Exception {
		return statsDAO.selectInvestAmount(map);
	}


	/**
	 *
	 * @MethodName : selectInvestAmount
	 * @param workVO
	 * @return
	 */
	public List<Map> selectTotalInvestAmount(Map<String, String> map) throws Exception {
		return statsDAO.selectTotalInvestAmount(map);
	}


	/**
	 *
	 * @MethodName : selectMnaSummary
	 * @param workVO
	 * @return
	 */
	public List<Map> selectMnaSummary(Map<String, String> map) throws Exception {
		return statsDAO.selectMnaSummary(map);
	}

	/**
	 *  전체 Deal - 진행상황
	 * @MethodName : selectDealProgress
	 * @param workVO
	 * @return
	 */
	public List<Map> selectDealProgress(Map<String, String> map) throws Exception {
		return statsDAO.selectDealProgress(map);
	}

	/**
	 * 전체 Deal - 유형별
	 * @MethodName : selectDealCategory
	 * @param workVO
	 * @return
	 */
	public List<Map> selectDealCategory(Map<String, String> map) throws Exception {
		return statsDAO.selectDealCategory(map);
	}

	/**
	 * 직접 투자 건수별 - 유형분석
	 * @MethodName : selectSelfInvestCase
	 * @param workVO
	 * @return
	 */
	public List<Map> selectSelfInvestCase(Map<String, String> map) throws Exception {
		return statsDAO.selectSelfInvestCase(map);
	}

	/**
	 * 직접 투자 금액별 - 유형분석
	 * @MethodName : selectSelfInvestAmount
	 * @param workVO
	 * @return
	 */
	public List<Map> selectSelfInvestAmount(Map<String, String> map) throws Exception {
		return statsDAO.selectSelfInvestAmount(map);
	}


	/**
	 * 3년 동기대비 실적비교
	 * @MethodName : selectRecordCompare
	 * @param workVO
	 * @return
	 */
	public List<Map> selectRecordCompare(Map<String, String> map) throws Exception {
		return statsDAO.selectRecordCompare(map);
	}


	/**
	 * 중개회사 순위
	 * @MethodName : selectRecordCompare
	 * @param workVO
	 * @return
	 */
	public List<Map> selectMediCorp(Map<String, String> map) throws Exception {
		return statsDAO.selectMediCorp(map);
	}


	/**
	 * 중개인 순위
	 * @MethodName : selectRecordCompare
	 * @param workVO
	 * @return
	 */
	public List<Map> selectBroker(Map<String, String> map) throws Exception {
		return statsDAO.selectBroker(map);
	}

}
