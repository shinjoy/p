<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ taglib prefix="spring" uri="http://www.springframework.org/tags"%>



<section id="detail_contents">
	<div class="carSearchBox">

		<label for="orgId"><span class="carSearchtitle">회사선택</span></label>
		<select class="select_b mgr20" id="orgId" name = "orgId" title="회사선택" onchange="fnObj.doChangeOrg();">
			<c:forEach items="${accessOrgIdList }" var = "data">
				<option value="${data.orgId }"
					<c:if test = "${data.orgId eq baseUserLoginInfo.applyOrgId}">selected="selected"</c:if>
				>${data.cpnNm }</option>
			</c:forEach>
		</select>

		<label for="yearArea"><span class="carSearchtitle">년도</span></label><span id="yearArea"></span>
		<label for="monthArea"><span class="carSearchtitle mgl10">월</span></label><span id="monthArea"></span>
		<span class="rd_List mgl20">
			<label><input type="radio" name = "option" value="all" onclick="fnObj.doSearch();" checked="checked"/><span>전체보기</span></label>
			<label><input type="radio" name = "option" value="holiday" onclick="fnObj.doSearch();"/><span>휴일만보기</span></label>
		</span>
		<button type="button" class="btn_g_black mgl10"  onclick="fnObj.doSearch();">검색</button>
	</div>
	<div class="sys_p_noti mgt20 mgb10">
		<span class="icon_noti"></span>
		<span>법정휴일만 </span><span class="pointB"> 'Y' </span><span>일때 휴일여부를 변경할 수 있습니다.</span>
	</div>
	<div id="AXGridCalendar"></div>
	<!-- <a href="javascript:fnObj.fullGridSize(1);"><b><u>FULL SIZE</u></b></a> -->

	<h3 class="h3_title_basic mgt30" id="holiTitleArea">등록된 휴일목록</h3>
	<div class="sys_p_noti mgt5 mgb10">
		<span class="icon_noti"></span>
		<span>재량휴일로 등록시 휴일 여부는 </span><span class="pointB">'Y'</span><span> 입니다.</span><span class="pointred"> (법정휴일은 수정이 불가합니다.)</span>
	</div>


	<div id="AXGridHoliday"></div>
	<!-- <div class="fullsizebtn"><a href="javascript:fnObj.fullGridSize(2);"><b><u>FULL SIZE</u></b></a></div> -->
	<div class="systemBtnzone">
		<button type="button" class="AXButton Classic btn_auth" onclick="fnObj.addHoliday();"><i class="axi axi-add" style="font-size:12px;"></i>재량휴일 등록</button><!-- <button type="button" class="AXButton Classic" onclick="fnObj.excelDownload();"><i class="axi axi-download" style="font-size:12px;"></i> 엑셀다운</button> -->
	</div>




</section>



<script type="text/javascript">

//Global variables :S ---------------
//사용자언어
var lang = '${baseUserLoginInfo.lang}';		//language (profile language... 'KOR' or 'ENG')

//공통코드
var comCodeYear;				//부서분류
var comCodeMonth;				//부서분류

var codeYn;

var calendarMode;
var mySearch = new AXSearch(); 	// instance
var myGridCalendar = new AXGrid(); 		// instance
var myGridHoliday = new AXGrid(); 	// instance	(오른쪽)

var myModal = new AXModal();	// instance

var orgCodeCombo;				//관계사 코드
var selDeptCode;
var selDeptClass = "ORG";
var selUserId;
var selUserName;
var curYear;
var curMonth;

var maxYear;

//Global variables :E ---------------



/*
 * 화면세팅에 관한함수(pageStart)와, 각종 함수들을 정의하는 fnObj(function object).
 */
var fnObj = {

	//################# init function :S #################

	//선로딩코드
	preloadCode: function(){

		//공통코드

		fnObj.getYearList(); //해당 관계사의 저장된 가장 마지막 달력 년도

		comCodeMonth = fnObj.getMonthCombo();
		var today = new Date();
		curYear = today.getFullYear();
		curMonth = eval(today.getMonth() + 1);

		codeYn = [{'CD':'Y', 'NM':'Y'}, {'CD':'N', 'NM':'N'}];


		var params = {'authOrgId':'Y', 'userId':'${baseUserLoginInfo.userId}'};		//나에게 권한이 있는 관계사만 볼 수 있다
		orgCodeCombo = getCodeInfo(lang, 'optionValue', 'optionText', null, null, null, '/common/getOrgCodeCombo.do', params);	//ORG코드(콤보용) 호출



		var monthSelectTag = createSelectTag('mm', comCodeMonth, 'optionValue', 'optionText', curMonth, 'fnObj.doSearch(); ', {}, null, 'select_b w_date');	//select tag creator 함수 호출 (common.js)
		$("#monthArea").html(monthSelectTag);

	},


	//화면세팅
    pageStart: function(){


    	//-------------------------- 그리드 :S -------------------------
    	myGridCalendar.setConfig({
            targetID : "AXGridCalendar",
            theme : "AXGrid",

            fixedColSeq : 2,	//컬럼고정 index
            fitToWidth : true,	//true,	//넓이에맞게
            colHeadAlign : "center",	//헤드의 기본 정렬. "left"|"center"|"right"
            addClass : 'calendar_tb_st',
            height: 500,		//grid height
            //width: '95%',

            autoChangeGridView: { // autoChangeGridView by browser width
                mobile:[0,600], grid:[600]
            },

            passiveMode:true,
			passiveRemoveHide:true,

            colGroup : [
                {key:"NO", 		label:"NO", 	width:"40", 	align:"center",	sort: false,  formatter:function(){
                	//return (this.list.length - this.index) + ( ( this.page.pageNo - 1) * this.page.pageSize );		//역순
                	if(this.item.sysDate == new Date().yyyy_mm_dd()) return "<font color=#F78181><b>TODAY</b></font>";		//오늘 날짜 구별
                	else return ("<span class='fontGray\'>" + (this.index + 1) + "</span>");
                }},

                {key:"dd",	 			label:"일", 		width:"50",		align:"center",  formatter:function(){
                	if(this.item.weekKor == "토") return "<span class='setdate_color_sat\'>"+this.value+"</span>";
					else if( this.item.holiday == "Y")  return "<span class='setdate_color_sun\'>"+this.value+"</span>";
					else return "<span class='setdate_color_bas\'>"+this.value+"</span>";
                																					}},
                {key:"weekKor",			label:"요일", 	width:"50",		align:"center",  formatter:function(){
					if(this.item.weekKor == "토") return "<span class='setdate_color_sat\'>"+this.value+"</span>";
					else if( this.item.holiday == "Y")  return "<span class='setdate_color_sun\'>"+this.value+"</span>";
					else if( this.item.weekKor == "일")  return "<span class='setdate_color_sun\'>"+this.value+"</span>";
					else return "<span class='setdate_color_bas\'>"+this.value+"</span>";
					}},
                {key:"weekEng",			label:"요일(영문)", 		width:"120",	align:"left",  formatter:function(){
					if(this.item.weekKor == "토") return "<span class='setdate_color_sat\'>"+this.value+"</span>";
					else if( this.item.holiday == "Y")  return "<span class='setdate_color_sun\'>"+this.value+"</span>";
					else if( this.item.weekKor == "일")  return "<span class='setdate_color_sun\'>"+this.value+"</span>";
					else return "<span class='setdate_color_bas\'>"+this.value+"</span>";
					}},
                {key:"weekAb",			label:"요일약어", 		width:"70",	align:"left", formatter:function(){
					if(this.item.weekKor == "토") return "<span class='setdate_color_sat\'>"+this.value+"</span>";
					else if( this.item.holiday == "Y")  return "<span class='setdate_color_sun\'>"+this.value+"</span>";
					else if( this.item.weekKor == "일")  return "<span class='setdate_color_sun\'>"+this.value+"</span>";
					else return "<span class='setdate_color_bas\'>"+this.value+"</span>";
					}},
                {key:"yearWeek",		label:"년 주차", 		width:"90",	align:"center"},
                {key:"monthWeek", 		label:"월 주차",			width:"90",		align:"center"},

                {key:"formalHol", 		label:"재량휴일", 		width:"100",		align:"center", formatter: function(val){
                	var str = '<input type="hidden" id= "formalHol'+this.index+'" name="formalHol'+this.index+'" value="'+this.value+'" />';
                	str +=this.value;

                	return str;


                	/*
        			var colorObj = {'N':'#ededed', 'Y':'#FFF'};	//{'IT':'#F15F5F', 'ADMIN':'#F2CB61', 'WORK':'#BCE55C', 'USER':'#B2CCFF'};
        			재량휴일의 변경은  Y -> N으로만 가능하다
        			var disabled = null;
        			if(this.item.formalHol == 'N'){
        				disabled = "disabled";
        			}


        			//g_other_org_yn 을 사용해서 활성화여부 세팅
        			if(g_other_org_yn == 'Y'){
        				disabled = "disabled";
        				colorObj = {'N':'#ededed', 'Y':'#ededed'};
        			}

        			return createSelectTag('formalHol'+(this.index), codeYn, 'CD', 'NM', this.value, 'fnObj.doChangeIt(this,"' + this.item.sysDate + '","formalHol","' + this.item.nationalHol +'")', colorObj,'','change_direct select_b', disabled); */
                }},
                {key:"nationalHol", 		label:"법정휴일", 		width:"100",		align:"center"},
                {key:"holiday", 		label:"휴일여부", 		width:"100",		align:"center", formatter: function(val){

                	var colorObj = {};	//{'IT':'#F15F5F', 'ADMIN':'#F2CB61', 'WORK':'#BCE55C', 'USER':'#B2CCFF'};
        			var disabled = "disabled";

        			//재량휴일이 N , 법정휴일이 Y 일때만 휴일 여부 변경가능. -> 법정휴일 컨트롤 을 위함.
        			if(this.item.formalHol == 'N' && this.item.nationalHol == 'Y'){
        				disabled = "";
        			}else{
        				colorObj = {'N':'#ededed', 'Y':'#ededed'};
        			}

        			//g_other_org_yn 을 사용해서 활성화여부 세팅
        			if(g_other_org_yn == 'Y'){
        				disabled = "disabled";
        				colorObj = {'N':'#ededed', 'Y':'#ededed'};
        			}

        			var str ='';
        			if(this.item.sysDate < new Date().yyyy_mm_dd()){
        				str =this.value;
        			}else{
        				str =createSelectTag('holiday'+(this.index), codeYn, 'CD', 'NM', this.value, 'fnObj.doChangeIt(this,"' + this.item.sysDate + '","holiday","'+ this.item.nationalHol  +'","'+ this.item.formalHol  +'" )', colorObj, '','change_direct select_b', disabled);
        			}
					return str;

                }},
                {key:"holType", 		label:"휴일종류", 		width:"90",		align:"center", formatter : function(val){
                	var value = this.value;
                	if(value == null || value == "null"){
                		value = "";
                	}
                	if(this.item.holiday == 'Y'){
                		if(this.item.formalHol == 'Y' && this.item.formalHolType != undefined && this.item.formalHolType != "null" && this.item.formalHolType != ""){
                			if(value != ''){
                				value += ", ";
                			}
                			value +=  this.item.formalHolType;
                   		}
                		if(this.item.nationalHol == 'Y' && this.item.nationalHolType != undefined && this.item.nationalHolType != "null" && this.item.nationalHolType != ""){
                			if(value != ''){
                				value += ", ";
                			}
                			value += this.item.nationalHolType;
                		}
                	}
                	return value;
                }},
                {key:"inTime", 			label:"출근시간", 		width:"90",		align:"center" , formatter : function(){
                	if(this.item.holiday == 'Y'){
                		return "";
                	}else
                		return this.value;
                }},
                {key:"outTime", 		label:"퇴근시간", 		width:"90",		align:"center"	, formatter : function(){
                	if(this.item.holiday == 'Y'){
                		return "";
                	}else
                		return this.value;
                }},
                /*
                {key:"holPaid", 		label:"연차사용", 		width:"90",		align:"center", formatter: function(val){
        			var colorObj = {'N':'#AAA', 'Y':'#FFF'};	//{'IT':'#F15F5F', 'ADMIN':'#F2CB61', 'WORK':'#BCE55C', 'USER':'#B2CCFF'};
        			return createSelectTag('holPaid'+(this.index), codeYn, 'CD', 'NM', this.value, 'fnObj.doChangeIt(this,"' + this.item.sysDate + '","holPaid")', colorObj);
                }},

                {key:"costingYn", 		label:"비용 분석 여부", 		width:"90",		align:"center", formatter: function(val){
        			var colorObj = {'N':'#AAA', 'Y':'#FFF'};	//{'IT':'#F15F5F', 'ADMIN':'#F2CB61', 'WORK':'#BCE55C', 'USER':'#B2CCFF'};
        			return createSelectTag('costingYn'+(this.index), codeYn, 'CD', 'NM', this.value, 'fnObj.doChangeIt(this,"' + this.item.sysDate + '","costingYn")', colorObj);
                }},
                {key:"timesheetYn", 	label:"근무입력가능", 		width:"90",		align:"center", formatter: function(val){
        			var colorObj = {'N':'#AAA', 'Y':'#FFF'};	//{'IT':'#F15F5F', 'ADMIN':'#F2CB61', 'WORK':'#BCE55C', 'USER':'#B2CCFF'};
        			return createSelectTag('timesheetYn'+(this.index), codeYn, 'CD', 'NM', this.value, 'fnObj.doChangeIt(this,"' + this.item.sysDate + '","timesheetYn")', colorObj);
                }} **/
            ],
            body : {
                onclick: function(){
                    //toast.push(Object.toJSON({index:this.index, item:this.item}));
                	//toast.push("<b>내용</b>:\n" + this.item.CONTENT);
                	//alert(JSON.stringify(this));
                	if(this.c >= 1 &&  this.c <= 4 ){		//부서보기
                		fnObj.viewDept(this.list[this.index]);	//부서정보보기 (부서정보 객체전달)

                		//console.debug("# onClick #");
                		//console.debug(this.list[this.index]);
                	}

                },

                ondblclick: function(){
                	//fnObj.viewArticle(this.list[this.index].BOARD_SEQ);
                },

                addClass: function(){
                	if(this.item.sysDate < new Date().yyyy_mm_dd()) return "gray";			//지난 날짜 색구별
                	else if(this.item.sysDate == new Date().yyyy_mm_dd()) return "red";		//오늘 날짜 색구별
                }

            },
			page:{
				fullSizeButton: true,		//grid full size button... axisj AXGrid 에 추가 20161202

				paging:false,
				status:{formatter: null}
			}

        });
    	//-------------------------- 그리드 :E -------------------------

    	//-------------------------- 그리드 :S -------------------------
    	myGridHoliday.setConfig({
            targetID : "AXGridHoliday",
            theme : "AXGrid",

            fixedColSeq : 1,	//컬럼고정 index
            fitToWidth : true,	//true,	//넓이에맞게
            colHeadAlign : "center",	//헤드의 기본 정렬. "left"|"center"|"right"
            colHeadTool : false,	//컬럼 display 여부를 설정
            height: 250,		//grid height

            autoChangeGridView: { // autoChangeGridView by browser width
            	 mobile:[0,600], grid:[600]
            },
            colGroup : [
                {key:"NO", 		label:"NO", 	width:"40", 	align:"center",	sort: false,  formatter:function(){
                	//return (this.list.length - this.index) + ( ( this.page.pageNo - 1) * this.page.pageSize );		//역순
                	return ("<span class='fontGray\'>" + (this.index + 1) + "</span>");
                }},
                {key:"fromt", 	label:"휴일분류", 			width:"100",	align:"center", formatter:function(){
                	if(this.value == 'N'){
                		return "<span  class='setdate_color_sun\'>법정휴일</span>";
                	}else{
                		return "<span  class='setdate_color_bas\'>재량휴일</span>";
                	}
                }},
                /* {key:"holId", 		label:"ID", 			width:"80",		align:"center",  formatter:function(){return ("<b>" + (this.value) + "</b>");}}, */
                {key:"holiday",		label:"날짜", 			width:"200",	align:"center",  formatter:function(){
                	if(this.item.fromt == 'H'){
                		return ("<strong class='setdate_color_black\'>"+this.item.repeatHolidayTxt+"</strong>");		//holidayTxt > repeatHolidayTxt 20170321
                	}else{
                		return ("<strong class='setdate_color_black\'>"+this.item.repeatHolidayTxt+"</strong>");
                	}
               	}},
                /* {key:"holYyyy",		label:"년",		width:"100",	align:"center"},
                {key:"holMm",		label:"월", 			width:"100",		align:"center"},
                {key:"holDd",		label:"일", 		width:"100",		align:"center"}, */
                {key:"holType", 	label:"휴일종류", 			width:"300",	align:"center"},
                /* {key:"allHalf", 	label:"종일", 			width:"100",		align:"center"}, */
                {key:"repeatYn", 	label:"반복(연간)", 			width:"100",		align:"center",	formatter:function(){
                	return (this.value=='Y'?'<span>' + this.value + '</span>':this.value);
                }}
                /* {key:"holPaid", 	label:"연차", 			width:"100",		align:"center"}, */
              /*   {key:"enable", 		label:"사용", 			width:"100",		align:"center"} */
            ],
            body : {
                onclick: function(){
                    if(this.c >= 1 && this.c <= 6 ){		//메뉴보기
                    	var item = this.list[this.index];
                    	if(item.fromt  != 'N'){
                			fnObj.viewHoliday(this.list[this.index]);
                    	}

                	}

                },

                ondblclick: function(){
                	//fnObj.viewArticle(this.list[this.index].BOARD_SEQ);
                }

            },
			page:{
				fullSizeButton: true,		//grid full size button... axisj AXGrid 에 추가 20161202

				paging:false,
				status:{formatter: null}
			}

        });
    	//-------------------------- 그리드 :E -------------------------

    	//-------------------------- 모달창 :S -------------------------
    	myModal.setConfig({
    		windowID:"myModalCT",
    		width:740,
            mediaQuery: {
                mx:{min:0, max:1200}, dx:{min:767}
            },
    		displayLoading:true,
            scrollLock: true,
    		onclose: function(){
    		}
            ,contentDivClass: "popup_outline"
    	});
    	//-------------------------- 모달창 :E -------------------------

    },//end pageStart.

    //현재 DB 에 입력된 값중에 가장 마지막 년도
    getYearList : function(){

    	maxYear =0;

    	var url = contextRoot + "/system/getCalendarMaxYear.do";
    	var param ={
				orgId 	: $("#orgId").val(),
		};

    	var callback = function(result){
    		var obj = JSON.parse(result);

    		maxYear = obj.resultObject;

    		var yearArray = new Array();
        	if(maxYear != 0){
	        	for(var i = 2016; i <= maxYear; i++ ){
	        		var yearInfo = new Object();

	        		yearInfo.optionValue = i;
	        		yearInfo.optionText = i + "년";

	        		yearArray.push(yearInfo);
	        	}
        	}else{
        		var yearInfo = new Object();

        		yearInfo.optionValue = '0';
        		yearInfo.optionText = "달력정보없음";

        		yearArray.push(yearInfo);
        	}

        	var today = new Date();
    		var curYear = today.getFullYear();
        	var yearSelectTag = createSelectTag('calYear', yearArray, 'optionValue', 'optionText', curYear, 'fnObj.doSearchHoliday(); fnObj.doSearch(); ', {}, null, 'select_b w_date');	//select tag creator 함수 호출 (common.js)
    		$("#yearArea").html(yearSelectTag);
       };

    	commonAjax("POST", url, param, callback, false);

    },

  	//검색
    doSearch: function(){		//knd : null - 검색버튼, 숫자 - 페이지검색

    	$("#holiTitleArea").html("등록된 휴일목록 ("+$("#calYear").val() +" 년)");

    	var url = contextRoot + "/system/getCalendarList.do";
    	//var param = mySearch.getParam().queryToObjectDec();	//query string 을 객체로 바꿔준다.		*queryToObjectDec 디코딩해서

    	var param ={
    				orgId 	: $("#orgId").val(),
    				calYear : $("#calYear").val(),
    				mm 		: $("#mm").val(),
    				option 	: $("input[name=option]:checked").val(),

    	};

    	var callback = function(result){

    		var obj = JSON.parse(result);

    		if(obj.result=='FAIL'){
    			alertM("검색 도중 오류가 발생하였습니다.");
    			return;
    		}

    		var cnt = obj.resultVal;	//결과수
    		var list = obj.resultList;	//결과데이터JSON


    		var gridData = {list:list, page: { listCount : cnt}};

    		console.log(gridData)

    		myGridCalendar.clearSort();			//소팅초기화
    		myGridCalendar.setData(gridData);	//그리드에결과반영


    		myGridCalendar.scrollTop(new Date().getDate());		//오늘 날짜 위치 이동
    	};

    	commonAjax("POST", url, param, callback, false);
    },//end doSearch

    //관계사 변경시
    doChangeOrg : function(){
		fnObj.getYearList();			//해당 관계사의 DB 에 입력된 가장 마지막 년도.
    	fnObj.doSearchHoliday();		//휴일 목록 조회
    	fnObj.doSearch();				//캘린더 조회

    },

  	//휴일 검색
    doSearchHoliday: function(){		//knd : null - 검색버튼, 숫자 - 페이지검색
    	var url = contextRoot + "/system/getHolidayList.do";
    	//var param = mySearch.getParam().queryToObjectDec();	//query string 을 객체로 바꿔준다.		*queryToObjectDec 디코딩해서
   		var param ={
    				orgId 	: $("#orgId").val(),
    				calYear : $("#calYear").val(),
    				//mm 		: $("#mm").val(),			선택한 해당년의 범위로 확장 20170321
    				option 	: $("input[name=option]:checked").val()
    	};

    	var callback = function(result){
    		//alert(result);
    		var obj = JSON.parse(result);

    		if(obj.result=='FAIL'){
    			alertM("검색 도중 오류가 발생하였습니다.");
    			return;
    		}

    		var cnt = obj.resultVal;	//결과수
    		var list = obj.resultList;	//결과데이터JSON

    		var gridData = {list:list, page: { listCount : cnt}};

    		myGridHoliday.clearSort();			//소팅초기화
    		myGridHoliday.setData(gridData);	//그리드에결과반영
    	};

    	commonAjax("POST", url, param, callback);

    },//end doSearchHoliday


  	//콤보박스 이벤트 함수
    doChangeIt: function(obj, sysDate, colNm, formalVal, nationalVal){

    	var url = contextRoot + "/system/doUpdateCalendar.do";
    	var param = {
    			sysDate: sysDate,		// 날짜
    			orgId : $("#orgId").val()	// 관계사
    	}
    	param[colNm] = obj.value;		//바꾸려는 컬럼명과 값 으로 (key/value) 전달


    	//재량휴일이 Y인 경우 휴일여부는 무조건 Y로 세팅함.
    	if(colNm == "formalHol" && obj.value == 'Y'){
    		param.holiday = 'Y';
    	}

    	//재량휴일이 N이면 휴일여부도 N으로 세팅함.
    	if(colNm == "formalHol" && obj.value == 'N'){
    		param.holiday = 'N';
    	}

    	//법정공휴일이 Y인 경우는 Y로 유지함.
		if(colNm == "formalHol" && formalVal == 'Y'){
			param.holiday = 'Y';
    	}

    	var callback = function(result){

    		var obj = JSON.parse(result);

    		//세션로그아웃 >> 재로그인
    		if(obj.result=='FAIL' && obj.resultVal=='SESSION'){
    			window.open('<c:url value="/login/loginPop.do" />', 'loginPop', 'width=500 height=200');
    			return;
    		}

    		var cnt = obj.resultVal;	//결과수

    	    if(obj.result == "SUCCESS"){

    	    	toast.push("저장하였습니다!");

    			fnObj.doSearch();	//재검색

    		}

    	};

    	commonAjax("POST", url, param, callback);
    },



  	// 휴일 등록
    addHoliday: function(){

    	if(maxYear == '0'){
    		alertM("달력정보가 없어 등록 할 수 없습니다.");
			return;
    	}


    	var url = "<c:url value='/system/addHoliday.do'/>";
    	var params = {mode:'new'};
    	params.orgId = $("#orgId").val();
    	params.maxYear = maxYear;

    	var obj = getRowObjectWithValue(orgCodeCombo, 'orgId', $('#orgId').val());
    	var orgName = obj.orgNm
    	params.orgText = orgName;



    	var list = myGridCalendar.getList();	//그리드 데이터(array object)

    	myModal.open({
    		url: url,
    		pars: params,
    		titleBarText: '휴일등록',		//titleBarText 속성 추가하였음.(원 Axisj에는 없었던것)
    		method:"POST",
    		top: $(window).scrollTop() + 150,
    		width: 540,
    		closeByEscKey: true				//esc 키로 닫기
    	});

    	$('#myModalCT').draggable();
    },//end writeOpen


    // 휴일 수정
    viewHoliday : function(holidayInfoObj){
    	var url = "<c:url value='/system/addHoliday.do'/>";
    	var params = {mode:'update',
    			holidayInfoObj:JSON.stringify(holidayInfoObj)};		//이미 리스트에서 읽은 정보를 팝업에 전달
    			params.orgId = $("#orgId").val();  //orgId

    			var obj = getRowObjectWithValue(orgCodeCombo, 'orgId', $('#orgId').val());
    	    	var orgName = obj.orgNm
    	    	params.orgText = orgName;

    	    	//params.orgText = $("select[name='orgId'] option:selected").text(); //orgText
    	myModal.open({
    		url: url,
    		pars: params,
    		titleBarText: '휴일수정',		//titleBarText 속성 추가하였음.(원 Axisj에는 없었던것)
    		method:"POST",
    		top: $(window).scrollTop() + 150,
    		width: 540,
    		closeByEscKey: true			//esc 키로 닫기
    	});

    	$('#myModalCT').draggable();
    },

    getMonthCombo: function (){
    	var monthArray = new Array();

    	for(var idx = 1; idx <= 12; idx ++ ){
    		var monthInfo = new Object();

    		monthInfo.optionValue = idx;
    		monthInfo.optionText = idx + "월";

    		monthArray.push(monthInfo);
    	}

    	return  monthArray;
    },



  	//그리드 사이즈 full (height all view)
    fullGridSize: function(knd, type){		//knd 1 or 2, type 'open' 'close'
    	if(knd == 1){		//상단
    		if(type == 'open'){
    			myGridCalendar.setHeight(myGridCalendar.getList().length * 36 + 100);
    		}else{
    			myGridCalendar.setHeight(500);
    		}

    	}else{				//하단
    		if(type == 'open'){
    			myGridHoliday.setHeight(myGridHoliday.getList().length * 36 + 100);
    		}else{
    			myGridHoliday.setHeight(250);
    		}
    	}
    }

  	//################# else function :E #################



};//end fnObj.




/*
 * 화면로딩완료후, 자바스크립트 화면세팅 과 그외동작들 호출.
 */
$(function(){
	fnObj.preloadCode();	//공통코드 or 각종선로딩코드
	fnObj.pageStart();		//화면세팅

	fnObj.doSearchHoliday();
	fnObj.doSearch();

	//검색버튼 동작
	$(".searchButtonItem").on("click", function(){
		fnObj.doSearch();
	});

});


</script>